name: Deploy to VM

on:
  push:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Set up Java (needed for building the Maven project)
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'

    # Build the Maven project
    - name: Build with Maven
      run: mvn clean package

    # Ensure the ~/.ssh directory exists
    - name: Ensure SSH Directory
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh

    # Write SSH key to a file
    - name: Create SSH Key File
      run: |
        echo "${{ secrets.SSH_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        
    # Test SSH connection
    - name: Test SSH Connection
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key azureuser@168.61.83.8 "echo 'SSH Connection Successful'"

    # Kill the process on the VM (if running)
    - name: Kill running process
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key azureuser@168.61.83.8 "sudo pkill -f ShelfSenseBE-0.0.1-SNAPSHOT.jar"

    # Delete the old JAR file
    - name: Delete old JAR file
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key azureuser@168.61.83.8 "sudo rm -f ShelfSenseBE-0.0.1-SNAPSHOT.jar"

    # Upload the new JAR file
    - name: Upload new JAR file
      run: |
        scp -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key target/ShelfSenseBE-0.0.1-SNAPSHOT.jar azureuser@168.61.83.8:/home/azureuser/

    # Run the new JAR file
    - name: Run new JAR file
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key azureuser@168.61.83.8 "nohup java -jar ShelfSenseBE-0.0.1-SNAPSHOT.jar > app.log 2>&1 & sleep 20 && pgrep -f ShelfSenseBE-0.0.1-SNAPSHOT.jar && echo 'JAR started successfully' || exit 1"
